clean – очищает папку target (содержит сгенерированный проект).
Назначение: Удаление предыдущей сборки для исключения конфликтов.
Когда применять: Перед началом новой сборки, чтобы гарантировать чистоту проекта. +

validate – проверяет корректность метаинформации о проекте.
Назначение: Убедиться, что структура проекта и файлы, например pom.xml, настроены правильно.
Когда применять: На раннем этапе сборки, чтобы подтвердить готовность проекта к компиляции.

compile – компилирует исходники проекта, помещая результаты в target/classes.
Назначение: Преобразование исходного кода в байт-код Java.
Когда применять: После успешной валидации для получения исполняемых классов. +

test – запускает тесты из папки test и сохраняет отчёт в target/test-classes (или target/surefire-reports).
Назначение: Проверка корректности работы кода через модульные тесты.
Когда применять: После компиляции, чтобы убедиться, что изменения не нарушили функциональность. +

package – упаковывает скомпилированные классы в конечный архив с расширением .jar.
Назначение: Формирование готового к развёртыванию артефакта.
Когда применять: После успешного прохождения тестов для получения итогового файла. +

verify – проверяет корректность итогового артефакта.
Назначение: Дополнительная проверка целостности и корректности сборки (включая интеграционные тесты).
Когда применять: После упаковки, для финальной проверки перед установкой или развёртыванием.

install – добавляет артефакт в локальный Maven-репозиторий.
Назначение: Размещение артефакта в ~/.m2/repository для использования в других проектах.
Когда применять: После успешной сборки и тестирования, если требуется повторное использование локально. +

deploy – заливает артефакт на production-сервер или в удалённый репозиторий.
Назначение: Развёртывание готового артефакта для общего доступа или в продакшене.
Когда применять: После полной проверки и тестирования, когда артефакт готов к развёртыванию.

плюсами отмечены команды, которыми мы будем пользоваться постоянно

Основной цикл сборки (default lifecycle) в Maven включает последовательное выполнение следующих фаз:

validate
compile
test
package
verify
install
deploy
Каждая из этих фаз выполняется по порядку, и если запустить более "позднюю" фазу (например, package),
то Maven автоматически выполнит все предыдущие необходимые шаги (например, validate, compile и test).